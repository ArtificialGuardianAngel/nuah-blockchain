syntax = "proto3";

package nuah.exchange;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "nuah/exchange/params.proto";
import "nuah/exchange/sell_order_book.proto";
import "nuah/exchange/buy_order_book.proto";
import "nuah/exchange/token_info.proto";

option go_package = "nuah/x/exchange/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/nuah/exchange/params";
  
  }
  
  // Queries a list of SellOrderBook items.
  rpc SellOrderBook    (QueryGetSellOrderBookRequest) returns (QueryGetSellOrderBookResponse) {
    option (google.api.http).get = "/nuah/exchange/sell_order_book/{index}";
  
  }
  rpc SellOrderBookAll (QueryAllSellOrderBookRequest) returns (QueryAllSellOrderBookResponse) {
    option (google.api.http).get = "/nuah/exchange/sell_order_book";
  
  }
  
  // Queries a list of BuyOrderBook items.
  rpc BuyOrderBook    (QueryGetBuyOrderBookRequest) returns (QueryGetBuyOrderBookResponse) {
    option (google.api.http).get = "/nuah/exchange/buy_order_book/{index}";
  
  }
  rpc BuyOrderBookAll (QueryAllBuyOrderBookRequest) returns (QueryAllBuyOrderBookResponse) {
    option (google.api.http).get = "/nuah/exchange/buy_order_book";
  
  }
  
  // Queries a list of GetAllSentOrders items.
  rpc GetAllSentOrders (QueryGetAllSentOrdersRequest) returns (QueryGetAllSentOrdersResponse) {
    option (google.api.http).get = "/nuah/exchange/get_all_sent_orders/{from}";
  
  }
  
  // Queries a list of GetSentOrders items.
  rpc GetSentOrders (QueryGetSentOrdersRequest) returns (QueryGetSentOrdersResponse) {
    option (google.api.http).get = "/nuah/exchange/get_sent_orders/{from}/{amountDenom}/{priceDenom}";
  
  }
  
  // Queries a list of TokenInfo items.
  rpc TokenInfo    (QueryGetTokenInfoRequest) returns (QueryGetTokenInfoResponse) {
    option (google.api.http).get = "/nuah/exchange/token_info/{index}";
  
  }
  rpc TokenInfoAll (QueryAllTokenInfoRequest) returns (QueryAllTokenInfoResponse) {
    option (google.api.http).get = "/nuah/exchange/token_info";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetSellOrderBookRequest {
  string index = 1;
}

message QueryGetSellOrderBookResponse {
  SellOrderBook sellOrderBook = 1 [(gogoproto.nullable) = false];
}

message QueryAllSellOrderBookRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllSellOrderBookResponse {
  repeated SellOrderBook                          sellOrderBook = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination    = 2;
}

message QueryGetBuyOrderBookRequest {
  string index = 1;
}

message QueryGetBuyOrderBookResponse {
  BuyOrderBook buyOrderBook = 1 [(gogoproto.nullable) = false];
}

message QueryAllBuyOrderBookRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllBuyOrderBookResponse {
  repeated BuyOrderBook                           buyOrderBook = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination   = 2;
}

message QueryGetAllSentOrdersRequest {
  string from = 1;
}

message QueryGetAllSentOrdersResponse {
  repeated BuyOrderBook  buyOrderBook  = 1 [(gogoproto.nullable) = false];
  repeated SellOrderBook sellOrderBook = 2 [(gogoproto.nullable) = false];
}

message QueryGetSentOrdersRequest {
  string from        = 1;
  string amountDenom = 2;
  string priceDenom  = 3;
}

message QueryGetSentOrdersResponse {
  BuyOrderBook  buyOrderBook  = 1;
  SellOrderBook sellOrderBook = 2;
}

message QueryGetTokenInfoRequest {
  string index = 1;
}

message QueryGetTokenInfoResponse {
  TokenInfo tokenInfo = 1 [(gogoproto.nullable) = false];
}

message QueryAllTokenInfoRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllTokenInfoResponse {
  repeated TokenInfo                              tokenInfo  = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

