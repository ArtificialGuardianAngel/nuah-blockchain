syntax = "proto3";

package nuah.exchange;

option go_package = "nuah/x/exchange/types";

// Msg defines the Msg service.
service Msg {
  rpc SendCreatePair  (MsgSendCreatePair ) returns (MsgSendCreatePairResponse );
  rpc SendSellOrder   (MsgSendSellOrder  ) returns (MsgSendSellOrderResponse  );
  rpc SendBuyOrder    (MsgSendBuyOrder   ) returns (MsgSendBuyOrderResponse   );
  rpc CancelSellOrder (MsgCancelSellOrder) returns (MsgCancelSellOrderResponse);
  rpc CancelBuyOrder  (MsgCancelBuyOrder ) returns (MsgCancelBuyOrderResponse );
}
message MsgSendCreatePair {
  string sourceDenom      = 3;
  string targetDenom      = 4;
  string creator          = 1;
  // string port             = 2;
  // string channelID        = 3;
  uint64 timeoutTimestamp = 2;
}

message MsgSendCreatePairResponse {}

message MsgSendSellOrder {
  string amountDenom      = 3;
  int32  amount           = 4;
  string priceDenom       = 5;
  int32  price            = 6;
  string creator          = 1;
  // string port             = 2;
  // string channelID        = 3;
  uint64 timeoutTimestamp = 2;
}

message MsgSendSellOrderResponse {
  string info = 1;
}

message MsgSendBuyOrder {
  string amountDenom      = 3;
  int32  amount           = 4;
  string priceDenom       = 5;
  int32  price            = 6;
  string creator          = 1;
  // string port             = 2;
  // string channelID        = 3;
  uint64 timeoutTimestamp = 2;
}

message MsgSendBuyOrderResponse {}

message MsgCancelSellOrder {
  string creator     = 1;
  // string port        = 2;
  // string channel     = 3;
  string amountDenom = 2;
  string priceDenom  = 3;
  int32  orderID     = 4;
}

message MsgCancelSellOrderResponse {}

message MsgCancelBuyOrder {
  string creator     = 1;
  // string port        = 2;
  // string channel     = 3;
  string amountDenom = 2;
  string priceDenom  = 3;
  int32  orderID     = 4;
}

message MsgCancelBuyOrderResponse {}

