syntax = "proto3";

package nuah.oracles;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "nuah/oracles/params.proto";
import "nuah/oracles/data.proto";

option go_package = "nuah/x/oracles/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/nuah/oracles/params";
  
  }
  
  // Queries a list of Data items.
  rpc Data    (QueryGetDataRequest) returns (QueryGetDataResponse) {
    option (google.api.http).get = "/nuah/oracles/data/{index}";
  
  }
  rpc DataAll (QueryAllDataRequest) returns (QueryAllDataResponse) {
    option (google.api.http).get = "/nuah/oracles/data";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetDataRequest {
  string index = 1;
}

message QueryGetDataResponse {
  Data data = 1 [(gogoproto.nullable) = false];
}

message QueryAllDataRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllDataResponse {
  repeated Data                                   data       = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

